/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 16-SNAPSHOT
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.trazadera.golden.restclient.model.Dependency;
import com.trazadera.golden.restclient.model.Resource;
import com.trazadera.golden.restclient.model.StewardRule;
import com.trazadera.golden.restclient.model.Validation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * A steward to automatically curate duplicated buckets.
 */
@Schema(description = "A steward to automatically curate duplicated buckets.")

public class StewardBucket extends Resource implements OneOfResourceExchangeDtoResourcesItems, OneOfResourceListResponseDtoResourcesItems, OneOfResourceResponseDtoResource {
  @SerializedName("entity")
  private String entity = null;

  @SerializedName("coffeeBreak")
  private Integer coffeeBreak = null;

  @SerializedName("rules")
  private List<StewardRule> rules = new ArrayList<StewardRule>();

  public StewardBucket entity(String entity) {
    this.entity = entity;
    return this;
  }

   /**
   * The entity to steward.
   * @return entity
  **/
  @Schema(required = true, description = "The entity to steward.")
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }

  public StewardBucket coffeeBreak(Integer coffeeBreak) {
    this.coffeeBreak = coffeeBreak;
    return this;
  }

   /**
   * The maximum number of items to steward before taking a coffee break. Must be positive. Default is 100.
   * @return coffeeBreak
  **/
  @Schema(description = "The maximum number of items to steward before taking a coffee break. Must be positive. Default is 100.")
  public Integer getCoffeeBreak() {
    return coffeeBreak;
  }

  public void setCoffeeBreak(Integer coffeeBreak) {
    this.coffeeBreak = coffeeBreak;
  }

  public StewardBucket rules(List<StewardRule> rules) {
    this.rules = rules;
    return this;
  }

  public StewardBucket addRulesItem(StewardRule rulesItem) {
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * The rules to apply to steward the buckets.
   * @return rules
  **/
  @Schema(required = true, description = "The rules to apply to steward the buckets.")
  public List<StewardRule> getRules() {
    return rules;
  }

  public void setRules(List<StewardRule> rules) {
    this.rules = rules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StewardBucket stewardBucket = (StewardBucket) o;
    return Objects.equals(this.entity, stewardBucket.entity) &&
        Objects.equals(this.coffeeBreak, stewardBucket.coffeeBreak) &&
        Objects.equals(this.rules, stewardBucket.rules) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entity, coffeeBreak, rules, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StewardBucket {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    coffeeBreak: ").append(toIndentedString(coffeeBreak)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
