/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 15
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Record metadata.
 */
@Schema(description = "Record metadata.")

public class RecordMetadata {
  @SerializedName("_errors")
  private List<String> _errors = null;

  /**
   * Bucket operation.
   */
  @JsonAdapter(OperationBucketEnum.Adapter.class)
  public enum OperationBucketEnum {
    @SerializedName("MERGE")
    MERGE("MERGE"),
    @SerializedName("REMOVE")
    REMOVE("REMOVE"),
    @SerializedName("SPLIT")
    SPLIT("SPLIT"),
    @SerializedName("DISCONNECT")
    DISCONNECT("DISCONNECT");

    private String value;

    OperationBucketEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OperationBucketEnum fromValue(String input) {
      for (OperationBucketEnum b : OperationBucketEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OperationBucketEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationBucketEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OperationBucketEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OperationBucketEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("_operation_bucket")
  private OperationBucketEnum _operationBucket = null;

  /**
   * Record operation.
   */
  @JsonAdapter(OperationEnum.Adapter.class)
  public enum OperationEnum {
    @SerializedName("NONE")
    NONE("NONE"),
    @SerializedName("INSERT")
    INSERT("INSERT"),
    @SerializedName("UPDATE")
    UPDATE("UPDATE"),
    @SerializedName("REMOVE")
    REMOVE("REMOVE");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OperationEnum fromValue(String input) {
      for (OperationEnum b : OperationEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OperationEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OperationEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("_operation")
  private OperationEnum _operation = null;

  @SerializedName("_history")
  private Boolean _history = null;

  @SerializedName("_merged")
  private List<String> _merged = null;

  @SerializedName("_unrelated")
  private List<String> _unrelated = null;

  @SerializedName("_updated")
  private OffsetDateTime _updated = null;

  public RecordMetadata _errors(List<String> _errors) {
    this._errors = _errors;
    return this;
  }

  public RecordMetadata addErrorsItem(String _errorsItem) {
    if (this._errors == null) {
      this._errors = new ArrayList<String>();
    }
    this._errors.add(_errorsItem);
    return this;
  }

   /**
   * List of errors.
   * @return _errors
  **/
  @Schema(description = "List of errors.")
  public List<String> getErrors() {
    return _errors;
  }

  public void setErrors(List<String> _errors) {
    this._errors = _errors;
  }

  public RecordMetadata _operationBucket(OperationBucketEnum _operationBucket) {
    this._operationBucket = _operationBucket;
    return this;
  }

   /**
   * Bucket operation.
   * @return _operationBucket
  **/
  @Schema(description = "Bucket operation.")
  public OperationBucketEnum getOperationBucket() {
    return _operationBucket;
  }

  public void setOperationBucket(OperationBucketEnum _operationBucket) {
    this._operationBucket = _operationBucket;
  }

  public RecordMetadata _operation(OperationEnum _operation) {
    this._operation = _operation;
    return this;
  }

   /**
   * Record operation.
   * @return _operation
  **/
  @Schema(description = "Record operation.")
  public OperationEnum getOperation() {
    return _operation;
  }

  public void setOperation(OperationEnum _operation) {
    this._operation = _operation;
  }

  public RecordMetadata _history(Boolean _history) {
    this._history = _history;
    return this;
  }

   /**
   * Get _history
   * @return _history
  **/
  @Schema(description = "")
  public Boolean isHistory() {
    return _history;
  }

  public void setHistory(Boolean _history) {
    this._history = _history;
  }

  public RecordMetadata _merged(List<String> _merged) {
    this._merged = _merged;
    return this;
  }

  public RecordMetadata addMergedItem(String _mergedItem) {
    if (this._merged == null) {
      this._merged = new ArrayList<String>();
    }
    this._merged.add(_mergedItem);
    return this;
  }

   /**
   * Get _merged
   * @return _merged
  **/
  @Schema(description = "")
  public List<String> getMerged() {
    return _merged;
  }

  public void setMerged(List<String> _merged) {
    this._merged = _merged;
  }

  public RecordMetadata _unrelated(List<String> _unrelated) {
    this._unrelated = _unrelated;
    return this;
  }

  public RecordMetadata addUnrelatedItem(String _unrelatedItem) {
    if (this._unrelated == null) {
      this._unrelated = new ArrayList<String>();
    }
    this._unrelated.add(_unrelatedItem);
    return this;
  }

   /**
   * Get _unrelated
   * @return _unrelated
  **/
  @Schema(description = "")
  public List<String> getUnrelated() {
    return _unrelated;
  }

  public void setUnrelated(List<String> _unrelated) {
    this._unrelated = _unrelated;
  }

  public RecordMetadata _updated(OffsetDateTime _updated) {
    this._updated = _updated;
    return this;
  }

   /**
   * Get _updated
   * @return _updated
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdated() {
    return _updated;
  }

  public void setUpdated(OffsetDateTime _updated) {
    this._updated = _updated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordMetadata recordMetadata = (RecordMetadata) o;
    return Objects.equals(this._errors, recordMetadata._errors) &&
        Objects.equals(this._operationBucket, recordMetadata._operationBucket) &&
        Objects.equals(this._operation, recordMetadata._operation) &&
        Objects.equals(this._history, recordMetadata._history) &&
        Objects.equals(this._merged, recordMetadata._merged) &&
        Objects.equals(this._unrelated, recordMetadata._unrelated) &&
        Objects.equals(this._updated, recordMetadata._updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_errors, _operationBucket, _operation, _history, _merged, _unrelated, _updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordMetadata {\n");
    
    sb.append("    _errors: ").append(toIndentedString(_errors)).append("\n");
    sb.append("    _operationBucket: ").append(toIndentedString(_operationBucket)).append("\n");
    sb.append("    _operation: ").append(toIndentedString(_operation)).append("\n");
    sb.append("    _history: ").append(toIndentedString(_history)).append("\n");
    sb.append("    _merged: ").append(toIndentedString(_merged)).append("\n");
    sb.append("    _unrelated: ").append(toIndentedString(_unrelated)).append("\n");
    sb.append("    _updated: ").append(toIndentedString(_updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
