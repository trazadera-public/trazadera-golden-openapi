/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 16-SNAPSHOT
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a request to create a table.
 */
@Schema(description = "Represents a request to create a table.")

public class TableCreateRequestDto {
  @SerializedName("table")
  private String table = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dataset")
  private String dataset = null;

  @SerializedName("history")
  private Boolean history = false;

  @SerializedName("auditable")
  private Boolean auditable = false;

  public TableCreateRequestDto table(String table) {
    this.table = table;
    return this;
  }

   /**
   * Table identifier
   * @return table
  **/
  @Schema(required = true, description = "Table identifier")
  public String getTable() {
    return table;
  }

  public void setTable(String table) {
    this.table = table;
  }

  public TableCreateRequestDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Table description
   * @return description
  **/
  @Schema(description = "Table description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TableCreateRequestDto dataset(String dataset) {
    this.dataset = dataset;
    return this;
  }

   /**
   * Dataset identifier. Must exist.
   * @return dataset
  **/
  @Schema(required = true, description = "Dataset identifier. Must exist.")
  public String getDataset() {
    return dataset;
  }

  public void setDataset(String dataset) {
    this.dataset = dataset;
  }

  public TableCreateRequestDto history(Boolean history) {
    this.history = history;
    return this;
  }

   /**
   * History flag to keep track of changes to records (eg. merged or deleted). Default is false.
   * @return history
  **/
  @Schema(description = "History flag to keep track of changes to records (eg. merged or deleted). Default is false.")
  public Boolean isHistory() {
    return history;
  }

  public void setHistory(Boolean history) {
    this.history = history;
  }

  public TableCreateRequestDto auditable(Boolean auditable) {
    this.auditable = auditable;
    return this;
  }

   /**
   * Auditable flag to keep track of changes to each individual record (eg. changed values). Default is false.
   * @return auditable
  **/
  @Schema(description = "Auditable flag to keep track of changes to each individual record (eg. changed values). Default is false.")
  public Boolean isAuditable() {
    return auditable;
  }

  public void setAuditable(Boolean auditable) {
    this.auditable = auditable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableCreateRequestDto tableCreateRequestDto = (TableCreateRequestDto) o;
    return Objects.equals(this.table, tableCreateRequestDto.table) &&
        Objects.equals(this.description, tableCreateRequestDto.description) &&
        Objects.equals(this.dataset, tableCreateRequestDto.dataset) &&
        Objects.equals(this.history, tableCreateRequestDto.history) &&
        Objects.equals(this.auditable, tableCreateRequestDto.auditable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(table, description, dataset, history, auditable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableCreateRequestDto {\n");
    
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dataset: ").append(toIndentedString(dataset)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    auditable: ").append(toIndentedString(auditable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
