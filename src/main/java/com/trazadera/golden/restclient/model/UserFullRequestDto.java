/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 16-SNAPSHOT
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a request to insert/update some user fields
 */
@Schema(description = "Represents a request to insert/update some user fields")

public class UserFullRequestDto {
  @SerializedName("name")
  private String name = null;

  @SerializedName("surname")
  private String surname = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("role")
  private String role = "USER";

  @SerializedName("internal")
  private Boolean internal = false;

  @SerializedName("enabled")
  private Boolean enabled = false;

  public UserFullRequestDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @Schema(required = true, description = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UserFullRequestDto surname(String surname) {
    this.surname = surname;
    return this;
  }

   /**
   * Surname(s)
   * @return surname
  **/
  @Schema(required = true, description = "Surname(s)")
  public String getSurname() {
    return surname;
  }

  public void setSurname(String surname) {
    this.surname = surname;
  }

  public UserFullRequestDto email(String email) {
    this.email = email;
    return this;
  }

   /**
   * User email (must be unique)
   * @return email
  **/
  @Schema(required = true, description = "User email (must be unique)")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserFullRequestDto role(String role) {
    this.role = role;
    return this;
  }

   /**
   * User role
   * @return role
  **/
  @Schema(required = true, description = "User role")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public UserFullRequestDto internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Flag to indicate if user is internal or external (Single Sign-On). By default, users are considered to be internal.
   * @return internal
  **/
  @Schema(description = "Flag to indicate if user is internal or external (Single Sign-On). By default, users are considered to be internal.")
  public Boolean isInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }

  public UserFullRequestDto enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * User enabled flag
   * @return enabled
  **/
  @Schema(description = "User enabled flag")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserFullRequestDto userFullRequestDto = (UserFullRequestDto) o;
    return Objects.equals(this.name, userFullRequestDto.name) &&
        Objects.equals(this.surname, userFullRequestDto.surname) &&
        Objects.equals(this.email, userFullRequestDto.email) &&
        Objects.equals(this.role, userFullRequestDto.role) &&
        Objects.equals(this.internal, userFullRequestDto.internal) &&
        Objects.equals(this.enabled, userFullRequestDto.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, surname, email, role, internal, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserFullRequestDto {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
