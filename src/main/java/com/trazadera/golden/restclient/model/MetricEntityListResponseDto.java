/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 16-SNAPSHOT
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;import java.util.Map;
import java.util.List;
import java.util.Map;
import org.threeten.bp.LocalDate;
/**
 * Represents a list of entity metrics.
 */
@Schema(description = "Represents a list of entity metrics.")

public class MetricEntityListResponseDto {
  @SerializedName("entity")
  private String entity = null;

  @SerializedName("from")
  private LocalDate from = null;

  @SerializedName("to")
  private LocalDate to = null;

  @SerializedName("values")
  private Map<String, List<Double>> values = null;

  @SerializedName("dates")
  private Map<String, List<LocalDate>> dates = null;

  @SerializedName("average")
  private Map<String, Double> average = null;

  @SerializedName("slope")
  private Map<String, Double> slope = null;

  @SerializedName("errors")
  private List<String> errors = null;

  @SerializedName("messages")
  private List<String> messages = null;

  public MetricEntityListResponseDto entity(String entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Entity identifier.
   * @return entity
  **/
  @Schema(description = "Entity identifier.")
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }

  public MetricEntityListResponseDto from(LocalDate from) {
    this.from = from;
    return this;
  }

   /**
   * Start date.
   * @return from
  **/
  @Schema(description = "Start date.")
  public LocalDate getFrom() {
    return from;
  }

  public void setFrom(LocalDate from) {
    this.from = from;
  }

  public MetricEntityListResponseDto to(LocalDate to) {
    this.to = to;
    return this;
  }

   /**
   * End date.
   * @return to
  **/
  @Schema(description = "End date.")
  public LocalDate getTo() {
    return to;
  }

  public void setTo(LocalDate to) {
    this.to = to;
  }

  public MetricEntityListResponseDto values(Map<String, List<Double>> values) {
    this.values = values;
    return this;
  }

  public MetricEntityListResponseDto putValuesItem(String key, List<Double> valuesItem) {
    if (this.values == null) {
      this.values = new HashMap<String, List<Double>>();
    }
    this.values.put(key, valuesItem);
    return this;
  }

   /**
   * Metric values by metric identifier.
   * @return values
  **/
  @Schema(description = "Metric values by metric identifier.")
  public Map<String, List<Double>> getValues() {
    return values;
  }

  public void setValues(Map<String, List<Double>> values) {
    this.values = values;
  }

  public MetricEntityListResponseDto dates(Map<String, List<LocalDate>> dates) {
    this.dates = dates;
    return this;
  }

  public MetricEntityListResponseDto putDatesItem(String key, List<LocalDate> datesItem) {
    if (this.dates == null) {
      this.dates = new HashMap<String, List<LocalDate>>();
    }
    this.dates.put(key, datesItem);
    return this;
  }

   /**
   * Metric date by metric identifier.
   * @return dates
  **/
  @Schema(description = "Metric date by metric identifier.")
  public Map<String, List<LocalDate>> getDates() {
    return dates;
  }

  public void setDates(Map<String, List<LocalDate>> dates) {
    this.dates = dates;
  }

  public MetricEntityListResponseDto average(Map<String, Double> average) {
    this.average = average;
    return this;
  }

  public MetricEntityListResponseDto putAverageItem(String key, Double averageItem) {
    if (this.average == null) {
      this.average = new HashMap<String, Double>();
    }
    this.average.put(key, averageItem);
    return this;
  }

   /**
   * Metric average by metric identifier.
   * @return average
  **/
  @Schema(description = "Metric average by metric identifier.")
  public Map<String, Double> getAverage() {
    return average;
  }

  public void setAverage(Map<String, Double> average) {
    this.average = average;
  }

  public MetricEntityListResponseDto slope(Map<String, Double> slope) {
    this.slope = slope;
    return this;
  }

  public MetricEntityListResponseDto putSlopeItem(String key, Double slopeItem) {
    if (this.slope == null) {
      this.slope = new HashMap<String, Double>();
    }
    this.slope.put(key, slopeItem);
    return this;
  }

   /**
   * Metric slope by metric identifier.
   * @return slope
  **/
  @Schema(description = "Metric slope by metric identifier.")
  public Map<String, Double> getSlope() {
    return slope;
  }

  public void setSlope(Map<String, Double> slope) {
    this.slope = slope;
  }

  public MetricEntityListResponseDto errors(List<String> errors) {
    this.errors = errors;
    return this;
  }

  public MetricEntityListResponseDto addErrorsItem(String errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<String>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.
   * @return errors
  **/
  @Schema(description = "List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.")
  public List<String> getErrors() {
    return errors;
  }

  public void setErrors(List<String> errors) {
    this.errors = errors;
  }

  public MetricEntityListResponseDto messages(List<String> messages) {
    this.messages = messages;
    return this;
  }

  public MetricEntityListResponseDto addMessagesItem(String messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<String>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Optional informational messages. If present, the request was successful and response code will be 2xx.
   * @return messages
  **/
  @Schema(description = "Optional informational messages. If present, the request was successful and response code will be 2xx.")
  public List<String> getMessages() {
    return messages;
  }

  public void setMessages(List<String> messages) {
    this.messages = messages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricEntityListResponseDto metricEntityListResponseDto = (MetricEntityListResponseDto) o;
    return Objects.equals(this.entity, metricEntityListResponseDto.entity) &&
        Objects.equals(this.from, metricEntityListResponseDto.from) &&
        Objects.equals(this.to, metricEntityListResponseDto.to) &&
        Objects.equals(this.values, metricEntityListResponseDto.values) &&
        Objects.equals(this.dates, metricEntityListResponseDto.dates) &&
        Objects.equals(this.average, metricEntityListResponseDto.average) &&
        Objects.equals(this.slope, metricEntityListResponseDto.slope) &&
        Objects.equals(this.errors, metricEntityListResponseDto.errors) &&
        Objects.equals(this.messages, metricEntityListResponseDto.messages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entity, from, to, values, dates, average, slope, errors, messages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricEntityListResponseDto {\n");
    
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    dates: ").append(toIndentedString(dates)).append("\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    slope: ").append(toIndentedString(slope)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
