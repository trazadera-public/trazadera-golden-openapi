/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 15
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a resource object in JSON format.
 */
@Schema(description = "Represents a resource object in JSON format.")

public class ResourceSaveRequestDto {
  @SerializedName("resource")
  private String resource = null;

  @SerializedName("create")
  private Boolean create = false;

  @SerializedName("test")
  private Boolean test = false;

  @SerializedName("testOptions")
  private String testOptions = null;

  public ResourceSaveRequestDto resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * A resource in JSON format.
   * @return resource
  **/
  @Schema(required = true, description = "A resource in JSON format.")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public ResourceSaveRequestDto create(Boolean create) {
    this.create = create;
    return this;
  }

   /**
   * Create flag. If true, the resource will be created if it does not exist. Otherwise, it will be updated.
   * @return create
  **/
  @Schema(description = "Create flag. If true, the resource will be created if it does not exist. Otherwise, it will be updated.")
  public Boolean isCreate() {
    return create;
  }

  public void setCreate(Boolean create) {
    this.create = create;
  }

  public ResourceSaveRequestDto test(Boolean test) {
    this.test = test;
    return this;
  }

   /**
   * Test configuration instead of saving. Default is false.
   * @return test
  **/
  @Schema(description = "Test configuration instead of saving. Default is false.")
  public Boolean isTest() {
    return test;
  }

  public void setTest(Boolean test) {
    this.test = test;
  }

  public ResourceSaveRequestDto testOptions(String testOptions) {
    this.testOptions = testOptions;
    return this;
  }

   /**
   * Test configuration options in JSON format. Ignored if not testing.
   * @return testOptions
  **/
  @Schema(description = "Test configuration options in JSON format. Ignored if not testing.")
  public String getTestOptions() {
    return testOptions;
  }

  public void setTestOptions(String testOptions) {
    this.testOptions = testOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceSaveRequestDto resourceSaveRequestDto = (ResourceSaveRequestDto) o;
    return Objects.equals(this.resource, resourceSaveRequestDto.resource) &&
        Objects.equals(this.create, resourceSaveRequestDto.create) &&
        Objects.equals(this.test, resourceSaveRequestDto.test) &&
        Objects.equals(this.testOptions, resourceSaveRequestDto.testOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, create, test, testOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceSaveRequestDto {\n");
    
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("    testOptions: ").append(toIndentedString(testOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
