/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.trazadera.golden.restclient.model.Resource;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Represents an set of resources in exchange format (used for import/export).
 */
@Schema(description = "Represents an set of resources in exchange format (used for import/export).")

public class ResourceExchangeDto {
  @SerializedName("version")
  private String version = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("resources")
  private List<Resource> resources = new ArrayList<Resource>();

  public ResourceExchangeDto version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Export version.
   * @return version
  **/
  @Schema(required = true, description = "Export version.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ResourceExchangeDto count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Exported resource count.
   * @return count
  **/
  @Schema(description = "Exported resource count.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public ResourceExchangeDto timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Export timestamp.
   * @return timestamp
  **/
  @Schema(description = "Export timestamp.")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public ResourceExchangeDto resources(List<Resource> resources) {
    this.resources = resources;
    return this;
  }

  public ResourceExchangeDto addResourcesItem(Resource resourcesItem) {
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Exported resources.
   * @return resources
  **/
  @Schema(required = true, description = "Exported resources.")
  public List<Resource> getResources() {
    return resources;
  }

  public void setResources(List<Resource> resources) {
    this.resources = resources;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceExchangeDto resourceExchangeDto = (ResourceExchangeDto) o;
    return Objects.equals(this.version, resourceExchangeDto.version) &&
        Objects.equals(this.count, resourceExchangeDto.count) &&
        Objects.equals(this.timestamp, resourceExchangeDto.timestamp) &&
        Objects.equals(this.resources, resourceExchangeDto.resources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, count, timestamp, resources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceExchangeDto {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
