/*
 * GOLDEN-API
 * Trazadera Golden API
 *
 * OpenAPI spec version: v1
 * Contact: support@trazadera.com 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.trazadera.golden.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Represents a detailed comparison between two records.
 */
@Schema(description = "Represents a detailed comparison between two records.")

public class ClassificationDetailDto {
  @SerializedName("tuple0")
  private Integer tuple0 = null;

  @SerializedName("tuple1")
  private Integer tuple1 = null;

  @SerializedName("similarities")
  private Map<String, Double> similarities = null;

  @SerializedName("score")
  private Integer score = null;

  public ClassificationDetailDto tuple0(Integer tuple0) {
    this.tuple0 = tuple0;
    return this;
  }

   /**
   * Index of first compared record
   * @return tuple0
  **/
  @Schema(description = "Index of first compared record")
  public Integer getTuple0() {
    return tuple0;
  }

  public void setTuple0(Integer tuple0) {
    this.tuple0 = tuple0;
  }

  public ClassificationDetailDto tuple1(Integer tuple1) {
    this.tuple1 = tuple1;
    return this;
  }

   /**
   * Index of second compared record
   * @return tuple1
  **/
  @Schema(description = "Index of second compared record")
  public Integer getTuple1() {
    return tuple1;
  }

  public void setTuple1(Integer tuple1) {
    this.tuple1 = tuple1;
  }

  public ClassificationDetailDto similarities(Map<String, Double> similarities) {
    this.similarities = similarities;
    return this;
  }

  public ClassificationDetailDto putSimilaritiesItem(String key, Double similaritiesItem) {
    if (this.similarities == null) {
      this.similarities = new HashMap<String, Double>();
    }
    this.similarities.put(key, similaritiesItem);
    return this;
  }

   /**
   * Map of similarities between compared records, key is column, value is similarity
   * @return similarities
  **/
  @Schema(description = "Map of similarities between compared records, key is column, value is similarity")
  public Map<String, Double> getSimilarities() {
    return similarities;
  }

  public void setSimilarities(Map<String, Double> similarities) {
    this.similarities = similarities;
  }

  public ClassificationDetailDto score(Integer score) {
    this.score = score;
    return this;
  }

   /**
   * Overall comparison score
   * @return score
  **/
  @Schema(description = "Overall comparison score")
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationDetailDto classificationDetailDto = (ClassificationDetailDto) o;
    return Objects.equals(this.tuple0, classificationDetailDto.tuple0) &&
        Objects.equals(this.tuple1, classificationDetailDto.tuple1) &&
        Objects.equals(this.similarities, classificationDetailDto.similarities) &&
        Objects.equals(this.score, classificationDetailDto.score);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tuple0, tuple1, similarities, score);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationDetailDto {\n");
    
    sb.append("    tuple0: ").append(toIndentedString(tuple0)).append("\n");
    sb.append("    tuple1: ").append(toIndentedString(tuple1)).append("\n");
    sb.append("    similarities: ").append(toIndentedString(similarities)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
