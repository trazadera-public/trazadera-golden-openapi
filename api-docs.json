{"openapi":"3.0.1","info":{"title":"GOLDEN-API","description":"Trazadera Golden API","contact":{"name":"Contact","url":"https://www.trazadera.com","email":"support@trazadera.com "},"license":{"name":"Legal Notice","url":"https://www.trazadera.com"},"version":"1.9.0"},"tags":[{"name":"entity","description":"Entity management"},{"name":"table","description":"Table management"},{"name":"resource","description":"Resource management"},{"name":"task","description":"Asynchronous task management"},{"name":"security","description":"Authentication and password reset"},{"name":"user","description":"Security web user management"},{"name":"token","description":"Security access token management"},{"name":"golden","description":"Golden record management"},{"name":"system","description":"System management"}],"paths":{"/api/users/{id}":{"put":{"tags":["user"],"summary":"Updates an existing user.","description":"Locates existing user and updates using the fields indicated in the request. Not all fields can be updated. Restricted to ADMIN role.","operationId":"updateUser","parameters":[{"name":"id","in":"path","description":"User identifier to be updated","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"User dto containing all fields to be updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserFullRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["user"],"summary":"Deletes an user (that is not you).","description":"Locates an user and executes a logical delete. You can't delete yourself. Restricted to ADMIN role.","operationId":"deleteUser","parameters":[{"name":"id","in":"path","description":"User identifier to be deleted","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/users/password/my":{"put":{"tags":["user"],"summary":"Updates my own password.","description":"Updates your own password. Restricted to authenticated users.","operationId":"updateMyPassword","requestBody":{"description":"New password (raw, not encrypted) compliant to password rules","content":{"application/json":{"schema":{"type":"string"}}},"required":true},"responses":{"400":{"description":"Invalid password"},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation"},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/users/my":{"get":{"tags":["user"],"summary":"Retrieves my user.","description":"Retrieves my user. Restricted to authenticated users.","operationId":"findMyUser","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"put":{"tags":["user"],"summary":"Updates my user.","description":"Locates my own user and updates using fields in the request. Not all fields can be updated. Restricted to authenticated users.","operationId":"updateMyUser","requestBody":{"description":"User dto containing all fields to be updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPartialRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/users/activate/{id}":{"put":{"tags":["user"],"summary":"Activates an user (that is deleted as is not yourself).","description":"Reverts a logical delete. Restricted to ADMIN role.","operationId":"activateUser","parameters":[{"name":"id","in":"path","description":"User identifier to be activated","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tokens/{id}":{"put":{"tags":["token"],"summary":"Updates an existing token.","description":"Locates existing token and updates using the fields indicated in the request. Returned token value is masked. Restricted to ADMIN role.","operationId":"updateToken","parameters":[{"name":"id","in":"path","description":"Token identifier to be updated","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Token dto containing all fields to be updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["token"],"summary":"Deletes a token.","description":"Locates a token and executes a logical delete. Token is flagged as deleted and will appear in listings. Restricted to ADMIN role.","operationId":"deleteToken","parameters":[{"name":"id","in":"path","description":"Token identifier to be deleted","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tokens/reset/{id}":{"put":{"tags":["token"],"summary":"Resets the token.","description":"Resets the token by changing the token value. Returned token value is not masked and will be pending to be copied. Expiration is set to 180 days from now. Restricted to ADMIN role.","operationId":"resetToken","parameters":[{"name":"id","in":"path","description":"Token identifier to be reset","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tokens/copy/{id}":{"put":{"tags":["token"],"summary":"Updates the copy flag for the token.","description":"Updates the copy flag for this token to true, so that any other call will return a masked value. Returned token value is masked. Restricted to ADMIN role.","operationId":"copyToken","parameters":[{"name":"id","in":"path","description":"Token identifier to be updated","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tokens/activate/{id}":{"put":{"tags":["token"],"summary":"Activates a token (that was previously deleted).","description":"Locates a token and rollbacks a previous deletion. Token is set to enabled. Restricted to ADMIN role.","operationId":"activateToken","parameters":[{"name":"id","in":"path","description":"Token identifier to be activated","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Token is not deleted"},"200":{"description":"Successful operation"},"404":{"description":"Token not found"},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/rename/{id}/{newId}":{"put":{"tags":["table"],"summary":"Renames an existing table.","description":"Locates existing table by identifier and renames to a new identifier. Only tables that are not being used can be renamed. The new identifier must not exist. Requires role ADMIN.","operationId":"renameTable","parameters":[{"name":"id","in":"path","description":"Table identifier to be renamed","required":true,"schema":{"type":"string"}},{"name":"newId","in":"path","description":"New table identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/description/{id}":{"put":{"tags":["table"],"summary":"Changes table description.","description":"Locates existing table by identifier and changes its description. Requires role ADMIN.","operationId":"updateTableDescription","parameters":[{"name":"id","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}},{"name":"description","in":"query","description":"Table description","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/clear/{name}":{"put":{"tags":["table"],"summary":"Clears an existing table.","description":"Locates existing table by identifier and clears all records. Records are physically deleted. Will not work if table is locked. Requires role ADMIN.","operationId":"clearTable","parameters":[{"name":"name","in":"path","description":"Table identifier to be cleared","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/security/password/reset/{username}":{"put":{"tags":["security"],"summary":"Resets user password.","description":"Resets user password if indicated username exists. Operation is always successful (for security reasons, to avoid user guessing). If the user exists, then a reset token is generated and an email is sent to the user. Only the recipient will have access to the generated token, that is mandatory to set up a new password. Does not require to be authenticated.","operationId":"resetPassword","parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/rename/{id}/{newId}":{"put":{"tags":["resource"],"summary":"Renames a resource.","description":"Locates an existing resource by identifier and renames to a new identifier. Only works if resource is not being used (referenced). Requires ADMIN role.","operationId":"renameResource","parameters":[{"name":"id","in":"path","description":"Existing resource identifier","required":true,"schema":{"type":"string"}},{"name":"newId","in":"path","description":"New resource identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/duplicate/{id}/{newId}":{"put":{"tags":["resource"],"summary":"Duplicates a resource.","description":"Locates a resource by identifier and duplicates using given new identifier. The new identifier must not exist. Requires ADMIN role.","operationId":"duplicateResource","parameters":[{"name":"id","in":"path","description":"Current resource identifier","required":true,"schema":{"type":"string"}},{"name":"newId","in":"path","description":"New resource identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/entities/{entity}/synchronize":{"put":{"tags":["entity"],"summary":"Synchronize indexing and classification for an entity.","description":"Locates a existing entity and executes a synchronization. Synchronization is aimed at indexing data and eventually (if configured) classifying buckets. If full synchronization flag is enabled, the a complete indexing and classification is forced; otherwise, the synchronization mask is calculated. Requires ADMIN role.","operationId":"synchronizeEntity","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}},{"name":"full","in":"query","description":"Full synchronization flag","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/entities/{entity}/locked/{locked}":{"put":{"tags":["entity"],"summary":"Locks/unlocks an entity.","description":"Locates a existing entity and locks/unlocks. A locked entity prevents any change to be made to the entity and underlying table and resources. Requires ADMIN role.","operationId":"setEntityLocking","parameters":[{"name":"entity","in":"path","description":"Entity name","required":true,"schema":{"type":"string"}},{"name":"locked","in":"path","description":"Locking flag","required":true,"schema":{"type":"boolean"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/entities/{entity}/automatic/{automatic}":{"put":{"tags":["entity"],"summary":"Set automatic/manual mode for an entity.","description":"Locates a existing entity and sets automatic behaviour. An entity in automatic mode does automatic synchronization; if not automatic, synchronization needs to be manually called. Requires ADMIN role.","operationId":"setEntityAutomatic","parameters":[{"name":"entity","in":"path","description":"Entity name","required":true,"schema":{"type":"string"}},{"name":"automatic","in":"path","description":"Automatic flag","required":true,"schema":{"type":"boolean"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/users":{"get":{"tags":["user"],"summary":"Retrieves all users.","description":"Retrieves all available users. Restricted to ADMIN role.","operationId":"findAllUsers","responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserListResponseDto"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["user"],"summary":"Creates a new user.","description":"Creates a new user using provided information. Restricted to ADMIN role.","operationId":"createUser","requestBody":{"description":"User dto containing all fields to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserFullRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tokens":{"get":{"tags":["token"],"summary":"Retrieves all tokens.","description":"Retrieves all available tokens and returns a list. It includes deleted tokens. Token values are masked. Restricted to ADMIN role.","operationId":"findAllTokens","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenListResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["token"],"summary":"Creates a new token.","description":"Creates a new token using provided information. Returned token value is not masked. Restricted to ADMIN role.","operationId":"createToken","requestBody":{"description":"Token dto containing all fields to be inserted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tasks/cancel/{id}":{"post":{"tags":["task"],"summary":"Cancels a task.","description":"Locates an existing task instance and cancels it. Not all instances and statuses can be cancelled. Restricted to ADMIN role.","operationId":"cancelTaskInstance","parameters":[{"name":"id","in":"path","description":"Task instance identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables":{"get":{"tags":["table"],"summary":"Retrieves all tables.","description":"Locates all available tables and returns a list.","operationId":"getAllTables","responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableListResponseDto"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["table"],"summary":"Creates a new table.","description":"Creates a new table using provided information. Requires role ADMIN.","operationId":"createTable","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableCreateRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/load":{"post":{"tags":["table"],"summary":"Runs a table load.","description":"Schedules a one-off data loading task. The data processing includes a data source (table or source),an optional transformation to change the dataset, an optional pipeline to process further the data, and finally a table to sink the resulting data. This operation is asynchronous and returns a task identifier. Restricted to role ADMIN.","operationId":"loadData","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableLoadRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/security/password/update":{"post":{"tags":["security"],"summary":"Updates password.","description":"Updates user password using a previously generated token and indicated raw password. If the indicated token is valid and not expired, and the password meets the requirements, then the password is updated. The token is invalidated after the password is updated. Does not require to be authenticated.","operationId":"updatePassword","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthPassUpdateRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/security/auth":{"post":{"tags":["security"],"summary":"Authenticates a physical user using provided information.","description":"Authenticates a physical user using email and raw password. The authentication generates a JWT bearer token if credentials match. Does not require to be authenticated.","operationId":"authenticate","requestBody":{"description":"Authentication dto containing username and raw password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources":{"get":{"tags":["resource"],"summary":"Retrieves all available resources.","description":"Locates all available resources and returns. Requires any authenticated role.","operationId":"getAllResources","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceListResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["resource"],"summary":"Saves a resource.","description":"Saves a resource using indicated JSON representation. Resource is validated before storing. Requires ADMIN role.","operationId":"saveJsonResource","requestBody":{"description":"Resource to store in JSON format","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceSaveRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/import":{"post":{"tags":["resource"],"summary":"Import resources.","description":"Receives a list of resources as JSON and tries to import one by one. Requires ADMIN role.","operationId":"importResources","requestBody":{"description":"Import resource dto","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceImportRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/export":{"post":{"tags":["resource"],"summary":"Export resources.","description":"Locates indicated resources by idenfier and returns a packaged file containing the exported resources as JSON. Requires ADMIN role.","operationId":"exportResources","requestBody":{"description":"Export resource dto","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceExportRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceExportResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/upsert":{"post":{"tags":["golden"],"summary":"Updates or inserts a golden record in an entity.","description":"Updates or inserts a golden record into indicated entity. The indicated record is searched: if found, then the record will be updated; if not found, the record will be considered as new and inserted. If more than one record is found in the search, only the first one will be updated. Requires ADMIN or STEWARD role.","operationId":"upsertRecord","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenUpsertRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenUpsertResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/search":{"post":{"tags":["golden"],"summary":"Searches golden records in an entity.","description":"Searches golden records considering indicated entity and search conditions. The search criteria is expressed as a record that should meet the requirements of the dataset associated to this entity. Requires any authenticated role.","operationId":"searchRecords","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenSearchRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenSearchResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/notification":{"post":{"tags":["golden"],"summary":"Sends a notification for one or several records in an entity.","description":"Searches golden records in the indicated entity using search conditions. For every found record, it re-creates a notification using the latest audited action for that record. If no auditing is available, notification will assume a record insertion. If the notification send flag is enabled, actual notifications will be sent (or re-sent). The result contains all sent notifications. Requires ADMIN or STEWARD role.","operationId":"notifyRecords","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenNotificationRequestDto"}}},"required":true},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenNotificationResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/buckets/split/{bucket}":{"post":{"tags":["golden"],"summary":"Splits a bucket.","description":"Locates a bucket and splits (modifies) the records using the automatic records or provided ones.","operationId":"splitBucket","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}},{"name":"bucket","in":"path","description":"Bucket identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenSplitRequestDto"}}}},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/buckets/merge/{bucket}":{"post":{"tags":["golden"],"summary":"Merges a bucket.","description":"Locates a bucket and merges the records in the bucket. The merge is done using the record generated automatically using the merger resource. Requires ADMIN or STEWARD role.","operationId":"mergeBucket","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}},{"name":"bucket","in":"path","description":"Bucket identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenMergeRequestDto"}}}},"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/buckets/disconnect/{bucket}":{"post":{"tags":["golden"],"summary":"Disconnects a bucket.","description":"Locates a bucket and disconnects all the records in the bucket. The disconnected records will be removed from the bucket but not deleted. Besides, the system will mark the records to avoid future connections. Requires ADMIN or STEWARD role.","operationId":"disconnectBucket","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}},{"name":"bucket","in":"path","description":"Bucket identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/entities":{"get":{"tags":["entity"],"summary":"Retrieves all available entities.","description":"Locates all entities and returns. Requires any authenticated role.","operationId":"getAllEntities","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntityListResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["entity"],"summary":"Creates a new entity or updates existing one.","description":"Creates a new entity or updates existing one using provided information. Functional validations are applied. Requires ADMIN role.","operationId":"saveEntity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntityRequestDto"}}},"required":true},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntityResponseDto"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/users/id/{id}":{"get":{"tags":["user"],"summary":"Retrieves an user by identifier.","description":"Retrieves an existing user by identifier. Restricted to ADMIN role.","operationId":"findByUserId","parameters":[{"name":"id","in":"path","description":"User identifier to be searched","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tasks/schedulings":{"get":{"tags":["task"],"summary":"Returns task schedulings.","description":"Returns all available task schedulings. Restricted to ADMIN role.","operationId":"getAllTaskSchedulings","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskSchedulingListResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tasks/instances":{"get":{"tags":["task"],"summary":"Returns task instances.","description":"Returns task instances filtered by status, sorted, and paged. Restricted to ADMIN role.","operationId":"getTaskInstances","parameters":[{"name":"filterByStatus","in":"query","description":"Filter instances by status","required":false,"schema":{"type":"string","description":"Task status.","enum":["CREATED","RUNNING","CANCEL","COMPLETED","FAILED","CANCELLED"]}},{"name":"sortByDate","in":"query","description":"Sort instances by date (asc, desc, none)","required":false,"schema":{"type":"string"}},{"name":"pageNumber","in":"query","description":"Page number","required":true,"schema":{"minimum":0,"type":"integer","format":"int32","default":0}},{"name":"pageSize","in":"query","description":"Page size","required":true,"schema":{"type":"integer","format":"int32","default":10}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskInstanceListResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/{table}/type/{type}/records/{id}":{"get":{"tags":["table"],"summary":"Retrieves a single record.","description":"Locates a table by identifier and type (TABLE, HISTORY) and retrieves a record by identifier. If the record is found and expandad flag is enabled, the result not only includes the record itself but expanded data, such as related records and audit/history. Requires authenticated user.","operationId":"getRecord","parameters":[{"name":"table","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}},{"name":"type","in":"path","description":"Table type","required":true,"schema":{"type":"string","description":"Table type.","enum":["TABLE","HISTORY"]}},{"name":"id","in":"path","description":"Record identifier","required":true,"schema":{"type":"string"}},{"name":"expanded","in":"query","description":"Include expanded data flag","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableRecordResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/{id}":{"get":{"tags":["table"],"summary":"Retrieves a table.","description":"Locates a table by identifier and returns it. Requires authenticated user.","operationId":"getTable","parameters":[{"name":"id","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/{id}/type/{type}/records":{"get":{"tags":["table"],"summary":"Retrieves a page of records.","description":"Locates a table by identifier and type (TABLE, HISTORY), applies metadata filtering if indicated, and returns selected page of records. Requires authenticated user.","operationId":"getPage","parameters":[{"name":"id","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}},{"name":"type","in":"path","description":"Table type","required":true,"schema":{"type":"string","description":"Table type.","enum":["TABLE","HISTORY"]}},{"name":"metadataFilter","in":"query","description":"Metadata filter","required":false,"schema":{"type":"string"}},{"name":"pageNumber","in":"query","description":"Page number","required":true,"schema":{"minimum":0,"type":"integer","format":"int32","default":0}},{"name":"pageSize","in":"query","description":"Page size","required":true,"schema":{"type":"integer","format":"int32","default":10}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableRecordPageResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/{id}/records/empty":{"get":{"tags":["table"],"summary":"Retrieves a new empty record.","description":"Locates a table by identifier and type and returns a new empty record. The record is not saved. Restricted to roles ADMIN and STEWARD.","operationId":"emptyRecord","parameters":[{"name":"id","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableRecordResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/{id}/datasets":{"get":{"tags":["table"],"summary":"Retrieves table datasets.","description":"Locates a table by identifier and returns a map containing all the datasets associated to this table. Usually there is only one, except if using nested datasets. Requires authenticated user.","operationId":"getTableDatasets","parameters":[{"name":"id","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableDatasetResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/system/version":{"get":{"tags":["system"],"summary":"Retrieves product version.","description":"Retrieves product version. Restricted to authenticated users.","operationId":"getInformation","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemVersionResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/system/openapi":{"get":{"tags":["system"],"summary":"Retrieves OpenAPI definition.","description":"Retrieves latest OpenAPI definition in JSON format. Restricted to authenticated users.","operationId":"getOpenApi","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{}}}},"security":[{"bearerAuth":[]}]}},"/api/security/whoami":{"get":{"tags":["security"],"summary":"Who am I?","description":"Returns authentication context information. Does not require to be authenticated.","operationId":"whoami","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/type/{type}":{"get":{"tags":["resource"],"summary":"Retrieves available resources of a certain type.","description":"Locates all available resources of indicated type and returns the list of resources. Type is a string that matches the resource type. For example, 'dataset' will return all available datasets, while 'source-csv' will return all available CSV sources. Requires any authenticated role.","operationId":"getResourcesByType","parameters":[{"name":"type","in":"path","description":"Resource type","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceListResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/id/{id}":{"get":{"tags":["resource"],"summary":"Retrieves a resource by identifier.","description":"Locates a resource by identifier and returns it. Requires any authenticated role.","operationId":"getResource","parameters":[{"name":"id","in":"path","description":"Resource identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["resource"],"summary":"Deletes a resource.","description":"Locates a resource by identifier and deletes it. Only works if resource is not used (referenced). Requires ADMIN role.","operationId":"deleteResource","parameters":[{"name":"id","in":"path","description":"Resource identifier","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/enums":{"get":{"tags":["resource"],"summary":"Retrieves all available enumerations.","description":"Returns handy maps and lists for all available enumerations of resources and auxiliary types. Requires any authenticated role.","operationId":"getEnumerations","responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceEnumsDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/resources/describe/{type}":{"get":{"tags":["resource"],"summary":"Describes a resource type.","description":"Given a resource type, returns a document that contains all properties for the resource. This is handy for dynamically creating new resources. Requires ADMIN role.","operationId":"describeResourceType","parameters":[{"name":"type","in":"path","description":"Resource type","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/buckets":{"get":{"tags":["golden"],"summary":"Retrieves buckets for an entity.","description":"Finds a retrieves buckets of potentially duplicated records, using different filtering, sorting and paging criteria. Requires any authenticated role.","operationId":"getBuckets","parameters":[{"name":"entity","in":"path","description":"Entity name","required":true,"schema":{"type":"string"}},{"name":"index","in":"query","description":"Index name","required":false,"schema":{"type":"string"}},{"name":"classificationFilter","in":"query","description":"Classification outcome filter","required":false,"schema":{"type":"string","description":"Classification outcome for a bucket.","enum":["MATCH","NON_MATCH","REVIEW","IGNORE"]}},{"name":"sorting","in":"query","description":"Bucket sorting","required":false,"schema":{"type":"string","description":"Represents bucket sorting options.","enum":["SIZE_ASC","SIZE_DESC","SCORE_ASC","SCORE_DESC","NATURAL"]}},{"name":"pageNumber","in":"query","description":"Page number","required":true,"schema":{"minimum":0,"type":"integer","format":"int32","default":0}},{"name":"pageSize","in":"query","description":"Page size","required":true,"schema":{"type":"integer","format":"int32","default":10}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenBucketPageResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/buckets/{bucket}":{"get":{"tags":["golden"],"summary":"Retrieves one bucket.","description":"Locates an entity and a certain bucket by identifier, and returns the bucket of potentially duplicated records. Requires any authenticated role.","operationId":"getBucket","parameters":[{"name":"entity","in":"path","description":"Entity name","required":true,"schema":{"type":"string"}},{"name":"bucket","in":"path","description":"Bucket id","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenBucketFullResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/entities/{entity}":{"get":{"tags":["entity"],"summary":"Retrieves a entity by identifier.","description":"Locates a entity by identifier and returns it. Requires any authenticated role.","operationId":"getEntity","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntityResponseDto"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["entity"],"summary":"Deletes a entity.","description":"Locates a entity and deletes it. Requires ADMIN role.","operationId":"deleteEntity","parameters":[{"name":"entity","in":"path","description":"Entity identifier to be deleted","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/entities/table/{table}":{"get":{"tags":["entity"],"summary":"Retrieves the entity for a certain table.","description":"Locates that is associated to indicated table, or none if table is not associated to an entity. Requires any authenticated role.","operationId":"getEntityForTable","parameters":[{"name":"table","in":"path","description":"Table identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntityResponseDto"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/users/password/{id}":{"delete":{"tags":["user"],"summary":"Resets user password.","description":"Resets password for a certain user - this operation resets the password for that user and sends email with reset instructions. This is the way for an administrator to deal with a lost password. Restricted to ADMIN role.","operationId":"resetPassword_1","parameters":[{"name":"id","in":"path","description":"User id to be updated","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/tables/{name}":{"delete":{"tags":["table"],"summary":"Deletes a table.","description":"Locates a table by identifier and deletes it. Table is physically deleted. Requires role ADMIN.","operationId":"deleteTable","parameters":[{"name":"name","in":"path","description":"Table identifier to be deleted","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/delete/{record}":{"delete":{"tags":["golden"],"summary":"Deletes a golden record from an entity.","description":"Locates a golden record by identifier into the indicated entity (table) and deletes it. If the entity has history enabled and logical delete is selected, the record not deleted but but moved to history; otherwise, the record is physically deleted. Requires ADMIN or STEWARD role.","operationId":"deleteRecord","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}},{"name":"record","in":"path","description":"Record identifier","required":true,"schema":{"type":"string"}},{"name":"physical","in":"query","description":"Physical delete flag.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GoldenDeleteResponseDto"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/golden/{entity}/buckets/delete/{bucket}":{"delete":{"tags":["golden"],"summary":"Deletes a bucket.","description":"Locates a bucket and deletes the bucket and the records in the bucket. The record deletion can be physical or logical (but bucket deletion is always physical). Requires ADMIN or STEWARD role.","operationId":"deleteBucket","parameters":[{"name":"entity","in":"path","description":"Entity identifier","required":true,"schema":{"type":"string"}},{"name":"bucket","in":"path","description":"Bucket identifier","required":true,"schema":{"type":"string"}},{"name":"physical","in":"query","description":"Physical delete flag.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"409":{"description":"Object is not in the correct state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"404":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"401":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"403":{"description":"Not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponseDto"}}}}},"security":[{"bearerAuth":[]}]}}},"components":{"schemas":{"UserFullRequestDto":{"required":["email","name","role","surname"],"type":"object","properties":{"name":{"type":"string","description":"Name"},"surname":{"type":"string","description":"Surname(s)"},"email":{"type":"string","description":"User email (must be unique)"},"role":{"type":"string","description":"Security role.","default":"USER","enum":["USER","STEWARD","ADMIN"]},"enabled":{"type":"boolean","description":"User enabled flag","default":false}},"description":"Represents a request to insert/update some user fields"},"BaseResponseDto":{"type":"object","properties":{"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Base response DTO for Golden API."},"UserDto":{"required":["lastAccess"],"type":"object","properties":{"id":{"type":"string","description":"User identifier."},"name":{"type":"string","description":"User name"},"surname":{"type":"string","description":"User surname(s)"},"email":{"type":"string","description":"User email. Must be unique."},"role":{"type":"string","description":"Security role.","default":"USER","enum":["USER","STEWARD","ADMIN"]},"lastAccess":{"type":"string","description":"Last successful login as ISO timestamp. If the user has never logged in, this field is null.","format":"date-time"},"totalFailedAccesses":{"type":"integer","description":"Total number of login attempts since last successful login. After certain number of failed attempts, the user is locked.","format":"int32"},"locked":{"type":"boolean","description":"User locked flag.","default":false},"enabled":{"type":"boolean","description":"User enabled flag.","default":false},"deleted":{"type":"boolean","description":"User deleted flag. Users are not physically deleted from the database, but marked as deleted (due to audited events).","default":false}},"description":"Represents an user, usually a physical person that accesses the Golden web application."},"UserResponseDto":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/UserDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents an user"},"UserPartialRequestDto":{"required":["name","surname"],"type":"object","properties":{"name":{"type":"string","description":"Name"},"surname":{"type":"string","description":"Surname(s)"}},"description":"Represents a request to update personal (limited) user information. "},"TokenRequestDto":{"required":["name","role"],"type":"object","properties":{"name":{"type":"string","description":"Name"},"role":{"type":"string","description":"Security role.","default":"USER","enum":["USER","STEWARD","ADMIN"]},"enabled":{"type":"boolean","description":"Enabled flag","default":true},"expirationDays":{"type":"integer","description":"Expiration in days. Must be positive.","format":"int32","default":365}},"description":"Represents a request to create a token"},"TokenDto":{"required":["created","expires"],"type":"object","properties":{"id":{"type":"string","description":"Token identifier"},"token":{"type":"string","description":"Token raw value (only available if not masked). Once it has been copied, the token is not provided anymore."},"maskedToken":{"type":"string","description":"Masked token. Always provided. Shows a prefix and a suffix of the token, with the rest of the characters masked."},"masked":{"type":"boolean","description":"Masked flag. Indicates if the token is masked or not. If true, the token raw value is not provided."},"name":{"type":"string","description":"Token name"},"role":{"type":"string","description":"Security role.","enum":["USER","STEWARD","ADMIN"]},"created":{"type":"string","description":"Creation date","format":"date-time"},"expires":{"type":"string","description":"Expiration date","format":"date-time"},"expired":{"type":"boolean","description":"Token expiration flag"},"enabled":{"type":"boolean","description":"Token enabled flag"},"deleted":{"type":"boolean","description":"Token deleted flag"}},"description":"Represents a token, aimed at providing applications access to the API."},"TokenResponseDto":{"type":"object","properties":{"token":{"$ref":"#/components/schemas/TokenDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a token"},"TableCreateRequestDto":{"required":["dataset","table"],"type":"object","properties":{"table":{"type":"string","description":"Table identifier"},"description":{"type":"string","description":"Table description"},"dataset":{"type":"string","description":"Dataset identifier. Must exist."},"history":{"type":"boolean","description":"History flag to keep track of changes to records (eg. merged or deleted). Default is false.","default":false},"auditable":{"type":"boolean","description":"Auditable flag to keep track of changes to each individual record (eg. changed values). Default is false.","default":false}},"description":"Represents a request to create a table."},"TableLoadRequestDto":{"required":["sinkTable","source"],"type":"object","properties":{"source":{"type":"string","description":"Source or table identifier. Must exist."},"transformation":{"type":"string","description":"Optional transformation name. If indicated, the transformation will be applied to the source data after reading from the source."},"pipeline":{"type":"string","description":"Optional pipeline identifier. If indicated, the pipeline will be applied after the optional transformation."},"sinkTable":{"type":"string","description":"Sink table identifier. Must exist."},"maxRecords":{"type":"integer","description":"Optional maximum number of records to process (use <0  to process all records). Default is -1 (process all source records).","format":"int32"},"sampleRecords":{"type":"integer","description":"Optinally use sampling when processing records (use <=0 to avoid sampling). Default is -1 (no sampling).","format":"int32"},"operation":{"type":"string","description":"Operation type. Defines how to manage the data sinking.","enum":["INSERT","UPSERT","DELETE"]}},"description":"Represents a request to load data into a table"},"AuthPassUpdateRequestDto":{"required":["password","token"],"type":"object","properties":{"token":{"type":"string","description":"Unique token (previously provided), Unless this token is valid, the password will not be updated."},"password":{"type":"string","description":"Password (clear text). Must comply with the password policy."}},"description":"Represents a request to update a password"},"AuthRequestDto":{"required":["email","password"],"type":"object","properties":{"email":{"type":"string","description":"User email"},"password":{"type":"string","description":"Password (in clear text)"}},"description":"Authentication request"},"AuthResponseDto":{"type":"object","properties":{"token":{"type":"string","description":"Bearer token"},"email":{"type":"string","description":"Email"},"id":{"type":"string","description":"Unique user identifier"},"role":{"type":"string","description":"Security role.","enum":["USER","STEWARD","ADMIN"]},"name":{"type":"string","description":"Name"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}},"type":{"type":"string","description":"Principal type.","enum":["USER","ACCESS_TOKEN","NONE"]}},"description":"Represents a successful user authentication"},"ResourceSaveRequestDto":{"type":"object","properties":{"resource":{"type":"string","description":"Resource in JSON format."},"create":{"type":"boolean","description":"Create flag. If true, the resource will be created if it does not exist. Otherwise, it will be updated.","default":false},"test":{"type":"boolean","description":"Test configuration instead of saving. Default is false.","default":false}},"description":"Represents a resource object in JSON format."},"Column":{"required":["description","key"],"type":"object","properties":{"type":{"type":"string","description":"Column type","default":"TOKEN","enum":["TOKEN","DATASET"]},"token":{"type":"string","description":"Token type. Only meaningful if column is a token.","nullable":true,"default":"TEXT","enum":["COUNTRY_CODE","COUNTRY_NAME","LOCALE","PHONE_COUNTRY_CODE","PHONE_NUMBER","PHONE","NAME_PREFIX","NAME_FIRST","NAME_MIDDLE","NAME_LAST","NAME","ADDRESS_STREET_TYPE","ADDRESS_STREET_NAME","ADDRESS_NUMBER","ADDRESS_STREET","ADDRESS_CITY","ADDRESS_POSTCODE","ADDRESS_STATE","ADDRESS","ID","EMAIL","NUMBER","DATE","ENUM","URL","TEXT","TEXT_AS_IS","IGNORE"]},"dataset":{"type":"string","description":"Dataset identifier."},"key":{"type":"string","description":"Column name"},"description":{"type":"string","description":"Column description","nullable":true},"array":{"type":"boolean","description":"Array flag. Indicates if the column supports multiple values.","default":false},"empty":{"type":"boolean","description":"Empty flag. Indicates if the column can be empty.","nullable":true,"default":true},"error":{"type":"string","description":"Error handling","nullable":true,"default":"IGNORE","enum":["CLEAR","REPLACE","FIX","IGNORE"]},"errorReplacement":{"type":"string","description":"Error replacement. Indicates what to replace when an error is found if error policy is to replace.","nullable":true},"validation":{"type":"string","description":"Validation type","nullable":true,"default":"NONE","enum":["NONE","DEFAULT","PARSER","REGEX","SCRIPT"]},"source":{"type":"string","description":"Data format. Used for validating the format.","nullable":true},"sourceLocale":{"type":"object","properties":{"language":{"type":"string"},"displayName":{"type":"string"},"country":{"type":"string"},"variant":{"type":"string"},"script":{"type":"string"},"unicodeLocaleAttributes":{"uniqueItems":true,"type":"array","items":{"type":"string"}},"unicodeLocaleKeys":{"uniqueItems":true,"type":"array","items":{"type":"string"}},"displayLanguage":{"type":"string"},"displayScript":{"type":"string"},"displayCountry":{"type":"string"},"displayVariant":{"type":"string"},"extensionKeys":{"uniqueItems":true,"type":"array","items":{"type":"string"}},"iso3Language":{"type":"string"},"iso3Country":{"type":"string"}},"description":"Data locale. Used for validating the format.","nullable":true},"regex":{"type":"string","description":"Regular expression. Used for validation.","nullable":true},"script":{"type":"string","description":"Groovy script. Used for validation.","nullable":true}},"description":"Column definition"},"Dataset":{"required":["_id","columns","description","type"],"type":"object","description":"A dataset represents a list of columns and their types. It is used across the system to define the data structure of records, entities, and tables; as such, it is a fundamental building block of the system.","allOf":[{"$ref":"#/components/schemas/Resource"},{"type":"object","properties":{"columns":{"type":"array","description":"List of columns in this dataset.","items":{"$ref":"#/components/schemas/Column"}}}}]},"Dependency":{"type":"object","properties":{"uses":{"uniqueItems":true,"type":"array","description":"Set of objects that this object is using.","items":{"type":"string","description":"Set of objects that this object is using."}},"usesCount":{"type":"integer","description":"Number of objects that this object is using.","format":"int32"},"usedBy":{"uniqueItems":true,"type":"array","description":"Set of objects that are using this object.","items":{"type":"string","description":"Set of objects that are using this object."}},"usedByCount":{"type":"integer","description":"Number of objects that are using this object.","format":"int32"}},"description":"Represents a dependency between objects."},"Resource":{"required":["_id","description","type"],"type":"object","properties":{"_id":{"type":"string","description":"Resource identifier"},"description":{"type":"string","description":"Resource description"},"lastUpdated":{"type":"string","description":"Last update timestamp","format":"date-time"},"test":{"$ref":"#/components/schemas/Test"},"validation":{"$ref":"#/components/schemas/Validation"},"type":{"type":"string","description":"Resource type"},"dependency":{"$ref":"#/components/schemas/Dependency"},"locked":{"type":"boolean","description":"Locking flag to indicate if resource can be modified"},"lockCount":{"type":"integer","description":"Resource lock count. Resource unlocked only if count is zero.","format":"int32"},"testSupported":{"type":"boolean"},"category":{"type":"string"}},"description":"Represents a resource in the Golden system. Resource specific format depends on the resource type","discriminator":{"propertyName":"type"}},"ResourceResponseDto":{"required":["resource"],"type":"object","properties":{"resource":{"$ref":"#/components/schemas/Resource"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a resource."},"Test":{"type":"object","properties":{"result":{"type":"string","enum":["OK","ERROR","WARNING","NOT_SUPPORTED"]},"messages":{"type":"array","items":{"type":"string"}},"duration":{"type":"string"}},"description":"Test helper object to store messages and errors."},"Validation":{"type":"object","properties":{"errors":{"type":"array","items":{"type":"string"}},"errorCount":{"type":"integer","format":"int32"}}},"ResourceImportRequestDto":{"required":["exchange"],"type":"object","properties":{"exchange":{"type":"string","description":"Previously exported resources in JSON format."}},"description":"Represents a request to import resources."},"ResourceExportRequestDto":{"required":["id"],"type":"object","properties":{"id":{"type":"array","description":"Resource identifiers to be exported (optional).","items":{"type":"string","description":"Resource identifiers to be exported (optional)."}},"all":{"type":"boolean","description":"Export all resources flag."}},"description":"Represents a request to export resources."},"ResourceExchangeDto":{"required":["resources","version"],"type":"object","properties":{"version":{"type":"string","description":"Export version."},"count":{"type":"integer","description":"Exported resource count.","format":"int32"},"timestamp":{"type":"integer","description":"Export timestamp.","format":"int64"},"resources":{"type":"array","description":"Exported resources.","items":{"$ref":"#/components/schemas/Resource"}}},"description":"Represents an set of resources in exchange format (used for import/export)."},"ResourceExportResponseDto":{"type":"object","properties":{"exchange":{"$ref":"#/components/schemas/ResourceExchangeDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a response with exported resources."},"GoldenUpsertRequestDto":{"required":["record"],"type":"object","properties":{"transformation":{"type":"string","description":"Optional transformation name. If indicated, the transformation must exist and will be applied to the search record before searching.","nullable":true},"record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."}},"description":"Represents a record upsert (update or insert) request"},"Record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"GoldenUpsertResponseDto":{"type":"object","properties":{"inserted":{"type":"boolean","description":"Indicates if the record was inserted."},"updated":{"type":"boolean","description":"Indicates if the record was updated."},"record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents upserted record result"},"GoldenSearchRequestDto":{"required":["record"],"type":"object","properties":{"transformation":{"type":"string","description":"Optional transformation name. If indicated, the transformation must exist and will be applied to the search record before searching."},"record":{"type":"object","properties":{"empty":{"type":"boolean"}},"additionalProperties":{"type":"object","description":"Search record document: contains the column and values to search for. Search is performed using the indexer associated to the entity."},"description":"Search record document: contains the column and values to search for. Search is performed using the indexer associated to the entity."},"pageNumber":{"type":"integer","description":"Optional page number for multiple results. Default is 0.","format":"int32"},"pageSize":{"type":"integer","description":"Optional page size for multiple results. Default is 10.","format":"int32"}},"description":"Represents a record search request"},"EntityDto":{"type":"object","properties":{"id":{"type":"string","description":"Entity identifier."},"description":{"type":"string","description":"Entity description."},"locked":{"type":"boolean","description":"Locked flag."},"automatic":{"type":"boolean","description":"Automatic synchronization flag."},"status":{"type":"string","description":"Entity status.","enum":["EMPTY","WORKING","READY","INCONSISTENT","ERROR"]},"dataset":{"type":"string","description":"Associated dataset."},"table":{"type":"string","description":"Associated table."},"type":{"type":"string","description":"Entity type.","enum":["NONE","SEARCH","DUPLICATES","AUTO_DUPLICATES"]},"searches":{"type":"boolean","description":"Search supported flag."},"duplicates":{"type":"boolean","description":"Duplicates supported flag."},"indexer":{"type":"string","description":"Associated indexer."},"classifier":{"type":"string","description":"Associated classifier."},"merger":{"type":"string","description":"Associated merger."},"pipeline":{"type":"string","description":"Associated pipeline."},"steward":{"type":"string","description":"Associated steward."},"recordCount":{"type":"integer","description":"Number of managed records.","format":"int64"},"bucketCount":{"type":"integer","description":"Number of managed buckets.","format":"int64"},"duplicateBucketCount":{"type":"integer","description":"Total number of potential duplicate buckets.","format":"int64"},"indexDuplicateCounts":{"type":"object","additionalProperties":{"type":"integer","description":"Map of indexes and number of potential duplicate buckets per index.","format":"int64"},"description":"Map of indexes and number of potential duplicate buckets per index."},"indexLabels":{"type":"object","additionalProperties":{"type":"string","description":"Index description."},"description":"Index description."},"events":{"type":"boolean","description":"Events supported flag."},"eventSink":{"type":"string","description":"Event sink name."}},"description":"Represents an entity."},"GoldenSearchResponseDto":{"type":"object","properties":{"entity":{"$ref":"#/components/schemas/EntityDto"},"search":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"result":{"type":"array","description":"List of found records. If no records are found, this list will be empty.","items":{"$ref":"#/components/schemas/Record"}},"count":{"type":"integer","description":"Total number of records found.","format":"int32"},"page":{"$ref":"#/components/schemas/PageDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents found records"},"PageDto":{"type":"object","properties":{"page":{"type":"integer","description":"Current page number.","format":"int32"},"pageSize":{"type":"integer","description":"Number of items per page.","format":"int32"},"totalPages":{"type":"integer","description":"Number of total pages.","format":"int32"}},"description":"Represents a page of data."},"GoldenNotificationRequestDto":{"required":["record"],"type":"object","properties":{"transformation":{"type":"string","description":"Optional transformation name. If indicated, the transformation must exist and will be applied to the search record before searching.","nullable":true},"record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"notify":{"type":"boolean","description":"Send notification flag. If enabled and the entity has events enabled, events will be sent. Default is false."}},"description":"Represents a request for record notifications"},"EntityEvent":{"type":"object","properties":{"id":{"type":"string","description":"Event unique identifier."},"type":{"type":"string","description":"Event type.","enum":["RECORD_DELETE","RECORD_UPDATE","RECORD_INSERT"]},"timestamp":{"type":"string","description":"Event timestamp.","format":"date-time"},"entity":{"type":"string","description":"Entity identifier."},"records":{"type":"array","description":"Associated records.","items":{"$ref":"#/components/schemas/Record"}}},"description":"Event to notify changes in an entity."},"GoldenNotificationResponseDto":{"type":"object","properties":{"notifications":{"type":"integer","description":"Number of notifications sent out.","format":"int32"},"events":{"type":"array","description":"Notification events. One for each found record.","items":{"$ref":"#/components/schemas/EntityEvent"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents the result of a notification request"},"GoldenSplitRequestDto":{"type":"object","properties":{"records":{"type":"array","description":"Optional split records; if not indicated, automatic split records will be calculated and used.","items":{"$ref":"#/components/schemas/Record"}}},"description":"Represents a bucket split request"},"GoldenMergeRequestDto":{"type":"object","properties":{"record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."}},"description":"Represents a bucket merge request"},"EntityRequestDto":{"required":["entity","table"],"type":"object","properties":{"create":{"type":"boolean","description":"Create entity flag. Default is true. If not set, the entity is meant to be updated."},"entity":{"type":"string","description":"Entity identifier"},"description":{"type":"string","description":"Entity description"},"table":{"type":"string","description":"Table identifier"},"type":{"type":"string","description":"Entity type.","enum":["NONE","SEARCH","DUPLICATES","AUTO_DUPLICATES"]},"indexer":{"type":"string","description":"Indexer identifier"},"classifier":{"type":"string","description":"Classifier identifier"},"merger":{"type":"string","description":"Merger identifier"},"steward":{"type":"string","description":"Steward identifier"},"pipeline":{"type":"string","description":"Pipeline identifier"},"events":{"type":"boolean","description":"Events supported flag"},"eventSink":{"type":"string","description":"Event sink name"}},"description":"Entity request"},"EntityResponseDto":{"type":"object","properties":{"entity":{"$ref":"#/components/schemas/EntityDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents an entity."},"UserListResponseDto":{"type":"object","properties":{"users":{"type":"array","description":"List of users","items":{"$ref":"#/components/schemas/UserDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of users"},"TokenListResponseDto":{"type":"object","properties":{"tokens":{"type":"array","description":"List of tokens","items":{"$ref":"#/components/schemas/TokenDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of tokens"},"TaskSchedulingDto":{"type":"object","properties":{"id":{"type":"string","description":"Scheduling unique identifier."},"description":{"type":"string","description":"Scheduling description."},"type":{"type":"string","description":"Scheduling type.","enum":["ONE_OFF","CRON"]},"clazz":{"type":"string","description":"Task implementation full class name."},"scope":{"type":"string","description":"Task scope.","enum":["INTERNAL","USER"]},"cluster":{"type":"string","description":"Task clustering behavior.","enum":["ONE_NODE","ALL_NODES"]}},"description":"Task scheduling."},"TaskSchedulingListResponseDto":{"type":"object","properties":{"schedulings":{"type":"array","description":"List of task schedulings.","items":{"$ref":"#/components/schemas/TaskSchedulingDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of task schedulings."},"PrincipalDto":{"type":"object","properties":{"id":{"type":"string","description":"Identifier"},"name":{"type":"string","description":"Name"}},"description":"Represents a Golden principal: physical user or access token"},"TaskInstanceDto":{"type":"object","properties":{"id":{"type":"string","description":"Task unique identifier."},"node":{"type":"string","description":"Node where the task is handled. Helps to identify the owner node in a cluster."},"user":{"type":"string","description":"Golden user identifier executing the task."},"completion":{"type":"integer","description":"Completion percent (0-100%). Not always provided as some tasks are unbouded.","format":"int32"},"message":{"type":"string","description":"Task status message. Always provided."},"status":{"type":"string","description":"Task status.","enum":["CREATED","RUNNING","CANCEL","COMPLETED","FAILED","CANCELLED"]},"created":{"type":"string","description":"Task creation ISO timestamp.","format":"date-time"},"finished":{"type":"string","description":"Task finalization ISO timestamp.","format":"date-time"},"scheduling":{"$ref":"#/components/schemas/TaskSchedulingDto"},"parameters":{"type":"object","additionalProperties":{"type":"string","description":"Map of task parameters. Specific to the task."},"description":"Map of task parameters. Specific to the task."}},"description":"Represents the execution of a task."},"TaskInstanceListResponseDto":{"type":"object","properties":{"principals":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/PrincipalDto"},"description":"Map of principals. Handy to decorate the user identifiers."},"tasks":{"type":"array","description":"List of task instances.","items":{"$ref":"#/components/schemas/TaskInstanceDto"}},"page":{"$ref":"#/components/schemas/PageDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of task instances."},"TableDto":{"type":"object","properties":{"id":{"type":"string","description":"Table identifier."},"description":{"type":"string","description":"Table description."},"dataset":{"type":"string","description":"Table dataset."},"history":{"type":"boolean","description":"Table history flag."},"audit":{"type":"boolean","description":"Table audit flag."},"created":{"type":"string","description":"Table creation ISO timestamp.","format":"date-time"},"size":{"type":"integer","description":"Number of records.","format":"int64"},"type":{"type":"string","description":"Table type.","enum":["TABLE","HISTORY"]},"dependency":{"$ref":"#/components/schemas/Dependency"},"locked":{"type":"boolean","description":"Table locked flag."}},"description":"Represents a data table."},"TableListResponseDto":{"type":"object","properties":{"tables":{"type":"array","description":"List of tables.","items":{"$ref":"#/components/schemas/TableDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of tables."},"TableRecordResponseDto":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/TableDto"},"record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"columns":{"type":"array","description":"Basic columns for this record.","items":{"type":"string","description":"Basic columns for this record."}},"merged":{"type":"array","description":"If this record is the result of a merge, these are the original records.","items":{"$ref":"#/components/schemas/Record"}},"columnMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Column"},"description":"Map of columns with detailed information."},"datasets":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Dataset"},"description":"Map of datasets."},"principals":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/PrincipalDto"},"description":"Map of golden principals. To decorate the audit information."},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents one record and optional expanded data."},"TableResponseDto":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/TableDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a table."},"TableRecordPageResponseDto":{"type":"object","properties":{"page":{"$ref":"#/components/schemas/PageDto"},"records":{"type":"array","description":"List of records in this page.","items":{"$ref":"#/components/schemas/Record"}},"columns":{"type":"array","description":"Column names in this page.","items":{"type":"string","description":"Column names in this page."}},"columnMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Column"},"description":"Map of columns with detailed information."},"table":{"$ref":"#/components/schemas/TableDto"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a page of records in a table"},"TableDatasetResponseDto":{"type":"object","properties":{"datasets":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Dataset"},"description":"Map of datasets. Usually it is just one dataset, except if the dataset contains nested datasets."},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents the datasets associated to a table."},"SystemVersionResponseDto":{"type":"object","properties":{"version":{"type":"string","description":"Build version","example":"1.0.0"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents product version."},"ResourceListResponseDto":{"required":["resources"],"type":"object","properties":{"resources":{"type":"array","description":"List of resources.","items":{"$ref":"#/components/schemas/Resource"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of resources."},"ResourceEnumsDto":{"type":"object","properties":{"columnTokens":{"type":"array","description":"Column tokens.","items":{"type":"string","description":"Column tokens."}},"columnTokensLabels":{"type":"object","additionalProperties":{"type":"string","description":"Column tokens and labels."},"description":"Column tokens and labels."},"columnValidations":{"type":"array","description":"Column validations.","items":{"type":"string","description":"Column validations."}},"columnValidationsLabels":{"type":"object","additionalProperties":{"type":"string","description":"Column validations and labels."},"description":"Column validations and labels."},"textOptions":{"type":"array","description":"Text options.","items":{"type":"string","description":"Text options."}},"textOptionsLabels":{"type":"object","additionalProperties":{"type":"string","description":"Text options and labels."},"description":"Text options and labels."},"columnErrorPolicies":{"type":"array","description":"Column error policies.","items":{"type":"string","description":"Column error policies."}},"columnErrorPoliciesLabels":{"type":"object","additionalProperties":{"type":"string","description":"Column error policies and labels."},"description":"Column error policies and labels."},"datasetColumns":{"type":"object","additionalProperties":{"type":"array","description":"Datasets and columns.","items":{"type":"string","description":"Datasets and columns."}},"description":"Datasets and columns."},"datasetColumnsLabels":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string","description":"Datasets, columns and labels."},"description":"Datasets, columns and labels."},"description":"Datasets, columns and labels."},"datasets":{"type":"array","description":"Datasets.","items":{"type":"string","description":"Datasets."}},"datasetsLabels":{"type":"object","additionalProperties":{"type":"string","description":"Datasets and labels."},"description":"Datasets and labels."},"credentials":{"type":"array","description":"Credentials.","items":{"type":"string","description":"Credentials."}},"credentialsLabels":{"type":"object","additionalProperties":{"type":"string","description":"Credentials and labels."},"description":"Credentials and labels."},"tables":{"type":"array","description":"Tables.","items":{"type":"string","description":"Tables."}},"tablesLabels":{"type":"object","additionalProperties":{"type":"string","description":"Tables and labels."},"description":"Tables and labels."},"sources":{"type":"array","description":"Sources.","items":{"type":"string","description":"Sources."}},"sourcesLabels":{"type":"object","additionalProperties":{"type":"string","description":"Sources and labels."},"description":"Sources and labels."},"sinks":{"type":"array","description":"Sinks.","items":{"type":"string","description":"Sinks."}},"sinksLabels":{"type":"object","additionalProperties":{"type":"string","description":"Sinks and labels."},"description":"Sinks and labels."},"transformations":{"type":"array","description":"Transformations.","items":{"type":"string","description":"Transformations."}},"transformationsLabels":{"type":"object","additionalProperties":{"type":"string","description":"Transformations and labels."},"description":"Transformations and labels."},"pipelines":{"type":"array","description":"Pipelines.","items":{"type":"string","description":"Pipelines."}},"pipelinesLabels":{"type":"object","additionalProperties":{"type":"string","description":"Pipelines and labels."},"description":"Pipelines and labels."},"pipelineProcessors":{"type":"array","description":"Pipeline processors.","items":{"type":"string","description":"Pipeline processors."}},"pipelineProcessorsLabels":{"type":"object","additionalProperties":{"type":"string","description":"Pipeline processors and labels."},"description":"Pipeline processors and labels."},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents handy configuration enumerations and lists related to resources."},"GoldenBucketLightResponseDto":{"type":"object","properties":{"id":{"type":"string","description":"Bucket identifier."},"key":{"type":"string","description":"Bucket key."},"score":{"type":"integer","description":"Bucket score.","format":"int32"},"deviation":{"type":"integer","description":"Bucket deviation.","format":"int32"},"classification":{"type":"string","description":"Classification outcome for a bucket.","enum":["MATCH","NON_MATCH","REVIEW","IGNORE"]},"count":{"type":"integer","description":"Number of records in the bucket.","format":"int32"},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a lightweight bucket (contains less information that a full weight bucket)."},"GoldenBucketPageResponseDto":{"type":"object","properties":{"page":{"$ref":"#/components/schemas/PageDto"},"entity":{"$ref":"#/components/schemas/EntityDto"},"buckets":{"type":"array","description":"List of lightweight buckets.","items":{"$ref":"#/components/schemas/GoldenBucketLightResponseDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a page of lightweight buckets."},"ClassificationDetailDto":{"type":"object","properties":{"tuple0":{"type":"integer","description":"Index of first compared record","format":"int32"},"tuple1":{"type":"integer","description":"Index of second compared record","format":"int32"},"similarities":{"type":"object","additionalProperties":{"type":"number","description":"Map of similarities between compared records, key is column, value is similarity","format":"double"},"description":"Map of similarities between compared records, key is column, value is similarity"},"score":{"type":"integer","description":"Overall comparison score","format":"int32"}},"description":"Represents a detailed comparison between two records."},"GoldenBucketFullResponseDto":{"type":"object","properties":{"id":{"type":"string","description":"Bucket identifier."},"key":{"type":"string","description":"Bucket key."},"score":{"type":"integer","description":"Bucket score.","format":"int32"},"deviation":{"type":"integer","description":"Bucket deviation.","format":"int32"},"classification":{"type":"string","description":"Classification outcome for a bucket.","enum":["MATCH","NON_MATCH","REVIEW","IGNORE"]},"count":{"type":"integer","description":"Number of records in the bucket.","format":"int32"},"entity":{"$ref":"#/components/schemas/EntityDto"},"index":{"type":"string","description":"Index that created this bucket"},"records":{"type":"array","description":"Records in this bucket","items":{"$ref":"#/components/schemas/Record"}},"merged":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"split":{"type":"array","description":"Candidates to split records","items":{"$ref":"#/components/schemas/Record"}},"columns":{"type":"array","description":"Column names in this bucket","items":{"type":"string","description":"Column names in this bucket"}},"columnMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Column"},"description":"Map of columns with detailed information."},"details":{"type":"array","description":"Optional classification information","items":{"$ref":"#/components/schemas/ClassificationDetailDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a bucket with all available information."},"EntityListResponseDto":{"type":"object","properties":{"entities":{"type":"array","description":"List of entities.","items":{"$ref":"#/components/schemas/EntityDto"}},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents a list of entities."},"GoldenDeleteResponseDto":{"type":"object","properties":{"record":{"type":"object","additionalProperties":{"type":"object","description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"description":"A record is a document with a unique identifier that is used as the core of Golden and represents a data record."},"errors":{"type":"array","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true,"items":{"type":"string","description":"List of errors. If HTTP response represents an error (4xx or 5xx) this will contain a list of errors. Otherwise, not present.","nullable":true}},"messages":{"type":"array","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true,"items":{"type":"string","description":"Optional informational messages. If present, the request was successful and response code will be 2xx.","nullable":true}}},"description":"Represents deleted record result"}},"securitySchemes":{"accessToken":{"type":"apiKey","name":"accessToken","scheme":"Bearer","bearerFormat":"Token"},"bearerAuth":{"type":"http","scheme":"Bearer","bearerFormat":"JWT"}}}}